---
export const prerender = false;

import { getLiveCollection } from "astro:content";
import Main from "@/layouts/Main.astro";
import Layout from "@/layouts/Layout.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import Card from "@/components/Card.astro";
import Pagination from "@/components/Pagination.astro";
import getUniqueTags from "@/utils/getUniqueTags";
import getPostsByTag from "@/utils/getPostsByTag";
import { SITE } from "@/config";

const { tag, page: pageParam } = Astro.params;
const currentPage = pageParam ? parseInt(pageParam) : 1;

const { entries: allPosts } = await getLiveCollection("liveBlog");
const posts = allPosts || [];

// Get all tags to find the tag name
const tags = getUniqueTags(posts);
const tagData = tags.find(t => t.tag === tag);

if (!tagData) {
  return Astro.redirect("/404");
}

const { tagName } = tagData;

// Get posts for this tag
const tagPosts = getPostsByTag(posts, tag);

// Calculate pagination
const pageSize = SITE.postPerPage;
const totalPages = Math.ceil(tagPosts.length / pageSize);
const start = (currentPage - 1) * pageSize;
const end = start + pageSize;
const paginatedPosts = tagPosts.slice(start, end);

// Create page object
const page = {
  data: paginatedPosts,
  start,
  end: Math.min(end, tagPosts.length),
  size: pageSize,
  total: tagPosts.length,
  currentPage,
  lastPage: totalPages,
  url: {
    current: `/tags/${tag}/${currentPage}`,
    prev: currentPage > 1 ? `/tags/${tag}/${currentPage - 1}` : undefined,
    next: currentPage < totalPages ? `/tags/${tag}/${currentPage + 1}` : undefined,
  },
};
---

<Layout title={`Tag: ${tagName} | ${SITE.title}`}>
  <Header />
  <Main
    pageTitle={[`Tag:`, `${tagName}`]}
    titleTransition={tag}
    pageDesc={`All the articles with the tag "${tagName}".`}
  >
    <h1 slot="title" transition:name={tag}>{`Tag:${tag}`}</h1>
    <ul class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {page.data.map(data => <Card variant="h3" {...data} />)}
    </ul>
  </Main>

  <Pagination {page} />

  <Footer noMarginTop={page.lastPage > 1} />
</Layout>
