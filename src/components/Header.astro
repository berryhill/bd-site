---
import IconMoon from "@/assets/icons/IconMoon.svg";
import IconSearch from "@/assets/icons/IconSearch.svg";
import IconSunHigh from "@/assets/icons/IconSunHigh.svg";
import LinkButton from "./LinkButton.astro";
import { SITE } from "@/config";

const { pathname } = Astro.url;

const currentPath =
  pathname.endsWith("/") && pathname !== "/" ? pathname.slice(0, -1) : pathname;

const isActive = (path: string) => {
  const currentPathArray = currentPath.split("/").filter(p => p.trim());
  const pathArray = path.split("/").filter(p => p.trim());

  return currentPath === path || currentPathArray[0] === pathArray[0];
};
---

<header class="site-header">
  <nav class="nav-container">
    <a href="/" class="logo">
      berryhill<span class="logo-dot">.</span><span class="logo-dev">dev</span>
    </a>

    <div class="nav-links">
      <a href="/posts" class:list={{ "active-nav": isActive("/posts") }}>
        Posts
      </a>
      <a href="/tags" class:list={{ "active-nav": isActive("/tags") }}>
        Tags
      </a>
      <a href="/about" class:list={{ "active-nav": isActive("/about") }}>
        About
      </a>
      <LinkButton
        href="/search"
        class:list={{ "active-nav": isActive("/search") }}
        ariaLabel="search"
        title="Search"
      >
        <IconSearch class="icon" />
      </LinkButton>
      {
        SITE.lightAndDarkMode && (
          <button
            id="theme-btn"
            class="theme-toggle"
            title="Toggles light & dark"
            aria-label="auto"
            aria-live="polite"
          >
            <IconMoon class="moon-icon" />
            <IconSunHigh class="sun-icon" />
          </button>
        )
      }
    </div>
  </nav>
</header>

<style>
  .site-header {
    position: sticky;
    top: 0;
    z-index: 100;
    background: var(--background);
    backdrop-filter: blur(12px);
    border-bottom: 1px solid var(--border);
  }

  .nav-container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 1.5rem 2rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .logo {
    font-size: var(--text-lg);
    font-weight: 700;
    color: var(--foreground);
    text-decoration: none;
    transition: color 0.3s ease;
  }

  .logo-dev {
    color: var(--accent);
  }

  .logo-dot {
    color: var(--accent-secondary);
    font-weight: 900;
  }

  .logo:hover {
    color: var(--accent);
  }

  .logo:hover .logo-dev {
    color: var(--accent);
  }

  .logo:hover .logo-dot {
    color: var(--accent-secondary);
  }

  .nav-links {
    display: flex;
    align-items: center;
    gap: 2rem;
  }

  .nav-links a {
    font-size: var(--text-sm);
    font-weight: 500;
    color: var(--fg-secondary);
    text-decoration: none;
    transition: color 0.3s ease;
  }

  .nav-links a:hover,
  .nav-links a.active-nav {
    color: var(--accent);
  }

  .icon {
    width: 20px;
    height: 20px;
  }

  .theme-toggle {
    position: relative;
    width: 40px;
    height: 40px;
    border: none;
    background: transparent;
    cursor: pointer;
    padding: 8px;
  }

  .moon-icon,
  .sun-icon {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 20px;
    height: 20px;
    transition: all 0.3s ease;
  }

  .moon-icon {
    opacity: 1;
    rotate: 0deg;
  }

  .sun-icon {
    opacity: 0;
    rotate: 90deg;
  }

  html[data-theme="dark"] .moon-icon {
    opacity: 0;
    rotate: -90deg;
  }

  html[data-theme="dark"] .sun-icon {
    opacity: 1;
    rotate: 0deg;
  }
</style>

<script>
  function initThemeToggle() {
    const themeBtn = document.querySelector("#theme-btn");
    if (!themeBtn) return;

    themeBtn.addEventListener("click", () => {
      const html = document.documentElement;
      const currentTheme = html.getAttribute("data-theme") === "dark" ? "light" : "dark";
      html.setAttribute("data-theme", currentTheme);
      localStorage.setItem("theme", currentTheme);
    });
  }

  initThemeToggle();
  document.addEventListener("astro:after-swap", initThemeToggle);
</script>
